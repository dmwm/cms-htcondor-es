name: Build

on:
  push:
    branches:
      - 'master'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Get the ref
      id: get-ref
      uses: ankitvgupta/ref-to-tag-action@master
      with:
        ref: ${{ github.ref }}
        head_ref: ${{ github.head_ref }}

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Get commit short sha
      id: vars
      shell: bash
      run: |
        echo ::set-output name=sha_short::$(git rev-parse --short $GITHUB_SHA)

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        load: true
        tags: cmssw/cms-htcondor-es:${{ steps.vars.outputs.sha_short }}
    - run: |
        docker push cmssw/cms-htcondor-es:${{ steps.vars.outputs.sha_short }}
        docker tag  cmssw/cms-htcondor-es:${{ steps.vars.outputs.sha_short }} registry.cern.ch/cmsweb/cms-htcondor-es

    - name: Login to registry.cern.ch
      uses: docker/login-action@v1.6.0
      with:
        registry: registry.cern.ch
        username: ${{ secrets.CERN_LOGIN }}
        password: ${{ secrets.CERN_TOKEN }}

    - name: Publish image to registry.cern.ch
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.CERN_LOGIN }}
        password: ${{ secrets.CERN_TOKEN }}
        registry: registry.cern.ch
        repository: cmsweb/cms-htcondor-es
        tag_with_ref: true
  deploy:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Upgrade pip
        run: |
          # install pip=>20.1 to use "pip cache dir"
          python3 -m pip install --upgrade pip

      - name: Get pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: python3 -m pip install -r ./requirements.txt

      - run: cd docs/ && make clean && make html

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build/html
